{"version":3,"file":"itee-sqlserver.cjs.js","sources":["../sources/TSQLServerDatabase.js","../sources/TSQLServerController.js"],"sourcesContent":["/**\n * @author [Ahmed DCHAR]{@link https://github.com/dragoneel}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @file Todo\n *\n * @example Todo\n *\n */\n\nimport * as SqlServerDriver  from 'tedious'\nimport { TAbstractDatabase } from 'itee-database'\n\nconst DEFAULT_CONNECT_TIMEOUT        = 15 * 1000\nconst DEFAULT_CLIENT_REQUEST_TIMEOUT = 15 * 1000\nconst DEFAULT_CANCEL_TIMEOUT         = 5 * 1000\nconst DEFAULT_CONNECT_RETRY_INTERVAL = 500\nconst DEFAULT_PACKET_SIZE            = 4 * 1024\nconst DEFAULT_TEXTSIZE               = 2147483647\nconst DEFAULT_DATEFIRST              = 7\nconst DEFAULT_PORT                   = 1433\nconst DEFAULT_TDS_VERSION            = '7_4'\nconst DEFAULT_LANGUAGE               = 'us_english'\nconst DEFAULT_DATEFORMAT             = 'mdy'\n\nclass TSQLServerDatabase extends TAbstractDatabase {\n\n    constructor ( parameters = {} ) {\n\n        const _parameters = {\n            ...{\n                server:         'localhost',\n                authentication: {\n                    type:    [ 'default', 'ntlm', 'azure-active-directory-password', 'azure-active-directory-access-token' ][ 0 ],\n                    options: {\n                        userName: 'user',\n                        password: 'password',\n                        domain:   ''\n                    }\n                },\n                options: {\n                    abortTransactionOnError:  false,\n                    appName:                  undefined,\n                    camelCaseColumns:         false,\n                    cancelTimeout:            DEFAULT_CANCEL_TIMEOUT,\n                    columnNameReplacer:       undefined,\n                    connectionRetryInterval:  DEFAULT_CONNECT_RETRY_INTERVAL,\n                    connectTimeout:           DEFAULT_CONNECT_TIMEOUT,\n                    //                    connectionIsolationLevel:         ISOLATION_LEVEL.READ_COMMITTED,\n                    cryptoCredentialsDetails: {},\n                    database:                 undefined,\n                    datefirst:                DEFAULT_DATEFIRST,\n                    dateFormat:               DEFAULT_DATEFORMAT,\n                    debug:                    {\n                        data:    false,\n                        packet:  false,\n                        payload: false,\n                        token:   false\n                    },\n                    enableAnsiNull:                   true,\n                    enableAnsiNullDefault:            true,\n                    enableAnsiPadding:                true,\n                    enableAnsiWarnings:               true,\n                    enableArithAbort:                 false,\n                    enableConcatNullYieldsNull:       true,\n                    enableCursorCloseOnCommit:        null,\n                    enableImplicitTransactions:       false,\n                    enableNumericRoundabort:          false,\n                    enableQuotedIdentifier:           true,\n                    encrypt:                          false,\n                    fallbackToDefaultDb:              false,\n                    instanceName:                     undefined,\n                    //                    isolationLevel:                   ISOLATION_LEVEL.READ_COMMITTED,\n                    language:                         DEFAULT_LANGUAGE,\n                    localAddress:                     undefined,\n                    maxRetriesOnTransientErrors:      3,\n                    multiSubnetFailover:              false,\n                    packetSize:                       DEFAULT_PACKET_SIZE,\n                    port:                             DEFAULT_PORT,\n                    readOnlyIntent:                   false,\n                    requestTimeout:                   DEFAULT_CLIENT_REQUEST_TIMEOUT,\n                    rowCollectionOnDone:              false,\n                    rowCollectionOnRequestCompletion: false,\n                    tdsVersion:                       DEFAULT_TDS_VERSION,\n                    textsize:                         DEFAULT_TEXTSIZE,\n                    trustServerCertificate:           true,\n                    useColumnNames:                   false,\n                    useUTC:                           true\n                }\n            },\n            ...parameters\n        }\n\n        _parameters.driver = {\n            SqlServerDriver: SqlServerDriver,\n            Connection:      new SqlServerDriver.Connection( _parameters ),\n            Request:         SqlServerDriver.Request\n        }\n\n        super( _parameters )\n\n    }\n\n    close ( onCloseCallback ) {\n\n        this.driver.Connection.close()\n        onCloseCallback()\n\n    }\n\n    connect () {\n\n        this.driver.Connection.on( 'connect', connectionError => {\n\n            if ( connectionError ) {\n                this.logger.error( connectionError )\n                return\n            }\n\n            const config   = this.driver.Connection.config\n            const host     = config.server\n            const port     = config.options.port\n            const database = config.options.database\n            this.logger.log( `SQLServer at ms-sql-s://${host}:${port}/${database} is connected !` )\n\n        } )\n\n    }\n\n    init () {\n        super.init()\n\n    }\n\n    on ( /*eventName, callback*/ ) {}\n\n}\n\nexport { TSQLServerDatabase }\n","/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @class TSQLServerController\n * @classdesc The TSQLServerController is the base class to perform CRUD operations on the database\n */\n\nimport {\n    isNotArrayOfString,\n    isNotString,\n    isNull,\n    isString,\n    isUndefined\n}                                  from 'itee-validators'\nimport { TAbstractDataController } from 'itee-database'\n\nclass TSQLServerController extends TAbstractDataController {\n\n    constructor ( parameters = {} ) {\n\n        const _parameters = {\n            ...{\n                driver:    null,\n                tableName: '',\n                columns:   []\n            }, ...parameters\n        }\n\n        super( _parameters )\n\n        this.tableName = _parameters.tableName\n        this.columns   = _parameters.columns\n\n    }\n\n    get tableName () {\n        return this._tableName\n    }\n\n    set tableName ( value ) {\n\n        const valueName = 'Table name'\n        const expect    = 'Expect an instance of String.'\n\n        if ( isNull( value ) ) { throw new TypeError( `${valueName} cannot be null ! ${expect}` ) }\n        if ( isUndefined( value ) ) { throw new TypeError( `${valueName} cannot be undefined ! ${expect}` ) }\n        if ( isNotString( value ) ) { throw new TypeError( `${valueName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\n\n        this._tableName = value\n\n    }\n\n    get columns () {\n        return this._columns\n    }\n\n    set columns ( value ) {\n\n        const valueName = 'Columns'\n        const expect    = 'Expect an array of strings.'\n\n        if ( isNull( value ) ) { throw new TypeError( `${valueName} cannot be null ! ${expect}` ) }\n        if ( isUndefined( value ) ) { throw new TypeError( `${valueName} cannot be undefined ! ${expect}` ) }\n        if ( isNotArrayOfString( value ) ) { throw new TypeError( `${valueName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\n\n        this._columns = value\n\n    }\n\n    setTableName ( value ) {\n\n        this.tableName = value\n        return this\n\n    }\n\n    setColumns ( value ) {\n\n        this.columns = value\n        return this\n\n    }\n\n    _createMany ( datas, response ) {\n        super._createMany( datas, response )\n\n        const columns         = this.columns\n        const formatedColumns = columns.toString()\n\n        let data           = null\n        let formatedValues = ''\n        let value          = null\n\n        for ( let index = 0, numberOfDatas = datas.length ; index < numberOfDatas ; index++ ) {\n            data = datas[ index ]\n\n            formatedValues += `(`\n            for ( let key in data ) {\n\n                if ( !columns.includes( key ) ) { continue }\n\n                value = data[ key ]\n\n                if ( isString( value ) ) {\n                    formatedValues += `'${value}', `\n                } else {\n                    formatedValues += `${value}, `\n                }\n\n            }\n            formatedValues = formatedValues.slice( 0, -2 )\n            formatedValues += `), `\n\n        }\n        formatedValues = formatedValues.slice( 0, -2 )\n\n        const query   = `INSERT INTO ${this._tableName} (${formatedColumns}) VALUES ${formatedValues}`\n        const request = new this._driver.Request( query, this.return( response ) )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _createOne ( data, response ) {\n        super._createOne( data, response )\n\n        const columns = this.columns\n\n        let formatedColumns = ''\n        let column          = null\n        let formatedValues  = ''\n        let value           = null\n        for ( let index = 0, numberOfColumns = columns.length ; index < numberOfColumns ; index++ ) {\n            column = columns[ index ]\n            value  = data[ column ]\n\n            if ( value ) {\n                formatedColumns += `${column}, `\n\n                if ( isString( value ) ) {\n                    formatedValues += `'${value}', `\n                } else {\n                    formatedValues += `${value}, `\n                }\n            }\n        }\n        formatedColumns = formatedColumns.slice( 0, -2 )\n        formatedValues  = formatedValues.slice( 0, -2 )\n\n        const query   = `INSERT INTO ${this._tableName} (${formatedColumns}) VALUES (${formatedValues})`\n        const request = new this._driver.Request( query, this.return( response ) )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _deleteAll ( response ) {\n        super._deleteAll( response )\n\n        const query   = `TRUNCATE TABLE ${this._tableName}`\n        const request = new this._driver.Request( query, this.return( response ) )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _deleteMany ( ids, response ) {\n        super._deleteMany( ids, response )\n\n        const query   = `DELETE FROM ${this._tableName} WHERE id IN (${ids})`\n        const request = new this._driver.Request( query, this.return( response ) )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _deleteOne ( id, response ) {\n        super._deleteOne( id, response )\n\n        const query   = `DELETE FROM ${this._tableName} WHERE id=${id}`\n        const request = new this._driver.Request( query, this.return( response ) )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _deleteWhere ( query, response ) {\n        super._deleteWhere( query, response )\n\n        TAbstractDataController.returnError( 'Unimplemented methods (DELETE WHERE)', response )\n\n    }\n\n    _readAll ( projection, response ) {\n        super._readAll( projection, response )\n\n        let results = []\n\n        const query   = `SELECT * FROM ${this.tableName}`\n        const request = new this._driver.Request( query, ( requestError, rowCount, results ) => {\n\n            if ( requestError ) {\n\n                TAbstractDataController.returnError( requestError, response )\n\n            } else if ( results.length === 0 ) {\n\n                TAbstractDataController.returnNotFound( response )\n\n            } else {\n\n                TAbstractDataController.returnData( results, response )\n\n            }\n\n        } )\n\n        request.on( 'row', columns => {\n\n            let result = {}\n            columns.forEach( column => {\n\n                result[ column.metadata.colName ] = column.value\n\n            } )\n            results.push( result )\n\n        } )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _readMany ( ids, projection, response ) {\n        super._readMany( ids, projection, response )\n\n        let results = []\n\n        const idsFormated = ids.toString()\n        const query       = `SELECT * FROM ${this.tableName} WHERE id IN (${idsFormated})`\n\n        const request = new this._driver.Request( query, ( requestError, rowCount, results ) => {\n\n            if ( requestError ) {\n\n                TAbstractDataController.returnError( requestError, response )\n\n            } else if ( results.length === 0 ) {\n\n                TAbstractDataController.returnNotFound( response )\n\n            } else {\n\n                TAbstractDataController.returnData( results, response )\n\n            }\n\n        } )\n\n        request.on( 'row', columns => {\n\n            let result = {}\n            columns.forEach( column => {\n\n                result[ column.metadata.colName ] = column.value\n\n            } )\n            results.push( result )\n\n        } )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _readOne ( id, projection, response ) {\n        super._readOne( id, projection, response )\n\n        let results = []\n\n        const query   = `SELECT * FROM ${this.tableName} WHERE id=${id}`\n        const request = new this._driver.Request( query, ( requestError, rowCount, results ) => {\n\n            if ( requestError ) {\n\n                TAbstractDataController.returnError( requestError, response )\n\n            } else if ( results.length === 0 ) {\n\n                TAbstractDataController.returnNotFound( response )\n\n            } else {\n\n                TAbstractDataController.returnData( results, response )\n\n            }\n\n        } )\n\n        request.on( 'row', columns => {\n\n            let result = {}\n            columns.forEach( column => {\n\n                result[ column.metadata.colName ] = column.value\n\n            } )\n            results.push( result )\n\n        } )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _readWhere ( query, projection, response ) {\n        super._readWhere( query, projection, response )\n\n        TAbstractDataController.returnError( 'Unimplemented methods (READ WHERE)', response )\n\n    }\n\n    _updateAll ( update, response ) {\n        super._updateAll( update, response )\n\n        let formatedUpdates = ''\n        for ( let key in update ) {\n            const formatedUpdate = update[ key ]\n            if ( isString( formatedUpdate ) ) {\n                formatedUpdates += `${key} = '${formatedUpdate}', `\n            } else {\n                formatedUpdates += `${key} = ${formatedUpdate}, `\n            }\n        }\n        formatedUpdates = formatedUpdates.slice( 0, -2 )\n\n        const query   = `UPDATE ${this._tableName} SET ${formatedUpdates}`\n        const request = new this._driver.Request( query, this.return( response ) )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _updateMany ( ids, updates, response ) {\n        super._updateMany( ids, updates, response )\n\n        let formatedUpdates = ''\n        let formatedUpdate  = null\n        for ( let key in updates ) {\n            formatedUpdate = updates[ key ]\n            if ( isString( formatedUpdate ) ) {\n                formatedUpdates += `${key} = '${formatedUpdate}', `\n            } else {\n                formatedUpdates += `${key} = ${formatedUpdate}, `\n            }\n        }\n        formatedUpdates = formatedUpdates.slice( 0, -2 )\n\n        const query   = `UPDATE ${this._tableName} SET ${formatedUpdates} WHERE id IN (${ids})`\n        const request = new this._driver.Request( query, this.return( response ) )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _updateOne ( id, update, response ) {\n        super._updateOne( id, update, response )\n\n        let formatedUpdates = ''\n        let formatedUpdate  = null\n        for ( let key in update ) {\n            formatedUpdate = update[ key ]\n            if ( isString( formatedUpdate ) ) {\n                formatedUpdates += `${key} = '${formatedUpdate}', `\n            } else {\n                formatedUpdates += `${key} = ${formatedUpdate}, `\n            }\n        }\n        formatedUpdates = formatedUpdates.slice( 0, -2 )\n\n        const query   = `UPDATE ${this._tableName} SET ${formatedUpdates} WHERE id=${id}`\n        const request = new this._driver.Request( query, this.return( response ) )\n\n        this._driver.Connection.execSql( request )\n\n    }\n\n    _updateWhere ( query, update, response ) {\n        super._updateWhere( query, update, response )\n\n        TAbstractDataController.returnError( 'Unimplemented methods (UPDATE WHERE)', response )\n\n    }\n\n}\n\nexport { TSQLServerController }\n"],"names":["TAbstractDatabase","SqlServerDriver","TAbstractDataController","isNull","isUndefined","isNotString","isNotArrayOfString","isString"],"mappings":"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"}